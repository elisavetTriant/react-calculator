{"version":3,"sources":["containers/Calculator.js","index.js"],"names":["Calculator","useState","prevValue","setPrevValue","input","setInput","nextNumber","setNextNumber","operator","setOperator","useEffect","handleNum","event","number","parseInt","target","value","String","handleOperation","handleMath","operators","split","formula","forEach","test","slice","push","math","join","className","type","id","readOnly","onClick","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d36a2219.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as math from 'mathjs' // import all as math from mathjs\n\nimport '../App.css';\n\nfunction Calculator() {\n  const [prevValue, setPrevValue] = useState(null);\n  const [input, setInput] = useState(\"0\");\n  const [nextNumber, setNextNumber] = useState(\"\");\n  const [operator, setOperator] = useState(null);\n\n  useEffect(() => {}, [operator, input, prevValue]);\n\n  const handleNum = (event) => {\n    const number = parseInt(event.target.value, 10)\n    setInput(input === \"0\" ? String(number) : input + number);\n    setNextNumber(nextNumber === \"0\" ? String(number) : nextNumber + number);\n  };\n\n\n  const insertDot = () => {\n    if (!/\\./.test(nextNumber)) {\n      setInput(input + \".\")\n      setNextNumber(nextNumber + \".\")\n    }\n  };\n\n  const handleOperation = (event)  => {\n    setPrevValue(input);\n    setNextNumber(\"\");\n    setOperator(operator+event.target.value);\n    setInput(input+event.target.value);\n  }\n\n  const clearData = () => {\n    setInput(\"0\");\n    setNextNumber(\"\")\n    setPrevValue(null);\n    setOperator(null)\n  };\n\n  const handleEqual = () => {\n    setOperator(null);\n    setPrevValue(null);\n    setNextNumber(\"\");\n\n    setInput(String(handleMath(input)));\n  }\n    const handleMath = (input) => {\n      //Split into numbers and formula operators\n      const operators = input.split(/([-+/*]+)/g);\n      let formula = [];\n\n      operators.forEach(operator => {\n        if (/([-+/*]+)/.test(operator)) {\n          //operator is sequence (?) of math operators\n            if(operator.slice(-1) === \"-\") {\n              operator = operator.slice(-2)\n            }else {\n              operator = operator.slice(-1)\n            }\n            \n            formula.push(operator)\n\n          }else {\n            //operator is number\"\n            formula.push(operator)\n          }\n        });\n\n      return math.evaluate(formula.join(\"\"));\n    }\n\n\n  return (\n    <div className=\"calculator\">\n     <div className=\"wrapper\">\n      <input type=\"text\" id=\"display\" value={input} readOnly />\n      <div className=\"calculator-buttons\">\n        <button id=\"clear\" className=\"calc-button op-key is-clear\" onClick={()=>clearData()}>Clear</button>\n        <button id=\"divide\"className=\"calc-button op-key\" value=\"/\" onClick={(e)=>handleOperation(e)}>/</button>\n\n        <button id=\"seven\" className=\"calc-button numbers\" value=\"7\" onClick={(e)=>handleNum(e)}>7</button>\n        <button id=\"eight\" className=\"calc-button numbers\" value=\"8\" onClick={(e)=>handleNum(e)}>8</button>\n        <button id=\"nine\" className=\"calc-button numbers\" value=\"9\" onClick={(e)=>handleNum(e)}>9</button>\n        <button id=\"multiply\" className=\"calc-button op-key\" value=\"*\" onClick={(e)=>handleOperation(e)}>x</button>\n\n        <button id=\"four\" className=\"calc-button numbers\" value=\"4\" onClick={(e)=>handleNum(e)}>4</button>\n        <button id=\"five\" className=\"calc-button numbers\" value=\"5\" onClick={(e)=>handleNum(e)}>5</button>\n        <button id=\"six\" className=\"calc-button numbers\" value=\"6\" onClick={(e)=>handleNum(e)}>6</button>\n        <button id=\"subtract\" className=\"calc-button op-key\" value=\"-\" onClick={(e)=>handleOperation(e)}>-</button>\n\n        <button id=\"one\" className=\"calc-button numbers\" value=\"1\" onClick={(e)=>handleNum(e)}>1</button>\n        <button id=\"two\" className=\"calc-button numbers\" value=\"2\" onClick={(e)=>handleNum(e)}>2</button>\n        <button id=\"three\" className=\"calc-button numbers\" value=\"3\" onClick={(e)=>handleNum(e)}>3</button>\n        <button id=\"add\" className=\"calc-button op-key\" value=\"+\" onClick={(e)=>handleOperation(e)}>+</button>\n\n        <button id=\"zero\" className=\"calc-button numbers is-zero\" value=\"0\" onClick={(e)=>handleNum(e)}>0</button>\n        <button id=\"decimal\" className=\"calc-button numbers\" value=\".\" onClick={()=>insertDot()}>.</button>\n        <button id=\"equals\" className=\"calc-button eq\" value=\"=\" onClick={()=>handleEqual()}>=</button>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './containers/Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}